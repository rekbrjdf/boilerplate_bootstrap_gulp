@mixin form-control-focus($ignore-warning: false) {
    &:focus {
      color: $input-focus-color;
      background-color: $input-focus-bg;
      border-color: $input-focus-placeholder-color; //$input-focus-border-color;
      outline: 0;
      box-shadow: none;
      // Avoid using mixin so we can pass custom focus shadow properly
      // @if $enable-shadows {
      //   box-shadow: $input-box-shadow, $input-focus-box-shadow;
      // } @else {
      //   box-shadow: $input-focus-box-shadow;
      // }
      &::-moz-placeholder,
      &:-moz-placeholder,   
      &:-ms-input-placeholder,
      &::-webkit-input-placeholder {
        color: $input-focus-placeholder-color;
      }
    }
  }

@mixin form-validation-state($state, $color, $icon) {
  .#{$state}-feedback {
    display: none;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    font-size: $form-feedback-font-size;
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: .5rem;
    margin-top: .1rem;
    font-size: .875rem;
    line-height: 1;
    color: #fff;
    background-color: rgba($color, .8);
    border-radius: .2rem;
  }

  .form-control,
  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $input-border-color;
      box-shadow: none;
      // border-color: $gray-900;
      // box-shadow: 0 0 0 $input-focus-width rgba($color, .25);

      &:focus {
        border-color: $input-focus-placeholder-color;
        background: $white;
        // box-shadow: 0 0 0 $input-focus-width rgba($color, .45);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .form-control,
  .custom-select { 
    &.is-invalid { 
      border-color: lighten($danger, 30%);
      background: lighten($danger, 30%);
      // box-shadow: 0 0 0 $input-focus-width rgba($color, .45);
    }
  }

  .form-check-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .form-check-label {
        color: $color;
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .custom-control-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-control-label {
        color: $body-color;

        &::before {
          background-color: lighten($color, 25%);
        }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }

      &:checked {
        ~ .custom-control-label::before {
          color: $custom-control-indicator-checked-color;
          // @include gradient-bg(lighten($color, 10%));

        }
      }

      &:focus {
        ~ .custom-control-label::before {
          box-shadow: 0 0 0 1px $body-bg, 0 0 0 $input-focus-width rgba($custom-control-indicator-checked-color, .45);
        }
      }
    }
  }

  // custom file
  .custom-file-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-file-label {
        border-color: $color;

        &::before { border-color: inherit; }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }

      &:focus {
        ~ .custom-file-label {
          box-shadow: 0 0 0 $input-focus-width rgba($color, .45);
        }
      }
    }
  }
}
